services:
  postgres:
    image: postgres:16
    container_name: dokploy-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: dokploy
      POSTGRES_DB: dokploy
      POSTGRES_PASSWORD: amukds4wi9001583845717ad2
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dokploy"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: dokploy-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  dokploy:
    image: dokploy/dokploy:latest
    container_name: dokploy
    restart: unless-stopped
    expose:
      - 3000  # Use expose, not ports!
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/dokploy:/etc/dokploy
      - dokploy-docker-config:/root/.docker
    environment:
      ADVERTISE_ADDR: ${ADVERTISE_ADDR:-127.0.0.1}
    networks:
      - dokploy-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dokploy.rule=Host(`${DOKPLOY_DOMAIN:-localhost}`)"
      - "traefik.http.routers.dokploy.entrypoints=web"
      - "traefik.http.services.dokploy.loadbalancer.server.port=3000"
      - "traefik.docker.network=dokploy-network"

  traefik:
    image: traefik:v3.1.2
    container_name: dokploy-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/dokploy/traefik/dynamic:/etc/dokploy/traefik/dynamic
    networks:
      - dokploy-network
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=dokploy-network"
      - "--providers.file.directory=/etc/dokploy/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.insecure=true"

volumes:
  postgres-data:
  redis-data:
  dokploy-docker-config:

networks:
  dokploy-network:
    driver: bridge
    name: dokploy-network